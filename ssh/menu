#!/bin/bash
clear
y='\033[0;33m'
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
z='\033[0;34m'
Blue='\033[0;36m'
purple='\033[0;33m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
LIGHT='\033[0;37m'
KN='\033[0;33m'
ORANGE='\033[0;33m'
PINK='\033[0;35m'
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
red() { echo -e "\\033[32;1m${*}\\033[0m"; }
#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
NS=`cat /etc/xray/dns`
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
#########################
# USERNAME
rm -f /usr/bin/user
username=$(curl https://raw.githubusercontent.com/Jatimpark/permission/main/ip | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl https://raw.githubusercontent.com/Jatimpark/permission/main/ip | grep $MYIP | awk '{print $3}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status ExpiRED Active | Geo Project
Info="(${green}Active${NC})"
Error="(${RED}ExpiRED${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl https://raw.githubusercontent.com/Jatimpark/permission/main/ip | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
echo -e "\e[32mloading...\e[0m"
clear

#Download/Upload today
dtoday="$(vnstat -i eth0 | grep "today" | awk '{print $2" "substr ($3, 1, 1)}')"
utoday="$(vnstat -i eth0 | grep "today" | awk '{print $5" "substr ($6, 1, 1)}')"
ttoday="$(vnstat -i eth0 | grep "today" | awk '{print $8" "substr ($9, 1, 1)}')"
#Download/Upload yesterday
dyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $2" "substr ($3, 1, 1)}')"
uyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $5" "substr ($6, 1, 1)}')"
tyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $8" "substr ($9, 1, 1)}')"
#Download/Upload current month
dmon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $3" "substr ($4, 1, 1)}')"
umon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $6" "substr ($7, 1, 1)}')"
tmon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $9" "substr ($10, 1, 1)}')"
clear

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"

# Getting CPU Information | Geo Project
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status | Geo Project
clear
# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${green}ON${NC}"
else
   status_ssh="${RED}OFF${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}ON${NC}"
else
    status_ws_epro="${RED}OFF${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${green}ON${NC}"
else
   status_haproxy="${RED}OFF${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then 
   status_xray="${green}ON${NC}"
else
   status_xray="${RED}OFF${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then 
   status_nginx="${green}ON${NC}"
else
   status_nginx="${RED}OFF${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="${green}ON${NC}"
else
   status_dropbear="${RED}OFF${NC} "
fi
#####INFOAKUN
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=$ssx/2
###########
KANAN="\033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m$NC"
KIRI="\033[1;32m>\033[1;33m>\033[1;31m>\033[1;31m$NC"
########
r="\033[1;31m"  #REDTERANG
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
echo -e "\033[0;32m"
figlet   Arya Blitar | lolcat
echo -e " "
echo -e "\E[44;1;39m ꧁࿇ SCRIPT SEDERHANA PENUH CINTA ࿇꧂ \E[0m"
echo -e ""
echo -e " ${Blue}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${Blue}│$NC\033[46m                    SYSTEM INFORMATION                    $NC${Blue}│$NC"
echo -e " ${Blue}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│  ${y} System OS ${NC}     $Blue=${NC} $MODEL${NC}"
echo -e " ${z}│  ${y} Domain ${NC}        $Blue=${NC} $domain${NC}"
echo -e " ${z}│  ${y} NSdomain ${NC}      $Blue=${NC} ${NS} $NC"
echo -e " ${z}│  ${y} IP VPS ${NC}        $Blue=${NC} $IPVPS${NC}"
echo -e " ${z}│  ${y} Isp Vps ${NC}       $Blue=${NC} $ISP $NC"
echo -e " ${z}│  ${y} City ${NC}          $Blue=${NC} $CITY ${NC}"
echo -e " ${z}│  ${y} Server RAM ${NC}    $Blue=${NC} $USAGERAM/$RAM MB $NC"
echo -e " ${z}│  ${y} Uptime Server${NC}  $Blue=${NC} $SERONLINE$ $NC"
echo -e " ${z}│  ${y} Core System${NC}    $Blue=${NC} $CORE $NC"
echo -e " ${z}│  ${y} Date ${NC}          $Blue=${NC} $DATEVPS${NC}"
echo -e " ${z}│  ${y} Time ${NC}          $Blue=${NC} $TIMEZONE${NC}"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e "${z} ╭══════════════════════════════════════════════════════════╮${NC}"
echo -e "${z} │    \033[0m ${y}SSH     VMESS     VLESS     TROJAN     SHADOWSOCKS$NC"
echo -e "${z} │    \033[0m ${NC} $ssh1       $vma         $vla         $trb             $ssa   $NC"
echo -e "${z} ╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${Blue}╭════════════════╮${NC}${Blue}╭══════════════════╮${NC}${Blue}╭════════════════════╮${NC}"
echo -e " ${Blue}│ ${NC} SSH : $status_ssh" "         NGINX : $status_nginx" "         XRAY : $status_xray         $NC${Blue}│$NC" 
echo -e " ${Blue}│ ${NC} WS-ePRO : $status_ws_epro" "     DROPBEAR : $status_dropbear" "      HAPROXY : $status_haproxy      $NC${Blue}│$NC" 
echo -e " ${Blue}╰════════════════╯${NC}${Blue}╰══════════════════╯${NC}${Blue}╰════════════════════╯${NC}"
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC [${green}01${NC}] SSH MENU$NC     ${z}│$NC [${green}10${NC}] AUTOREBOOT$NC ${z}  │$NC [${green}19${NC}] RESTART     $NC${z}│$NC"
echo -e " ${z}│$NC [${green}02${NC}] VMESS MENU$NC   ${z}│$NC [${green}11${NC}] INFO PORT$NC    ${z}│$NC [${green}20${NC}] DOMAIN      $NC${z}│$NC"    
echo -e " ${z}│$NC [${green}03${NC}] VLESS MENU$NC   ${z}│$NC [${green}12${NC}] SPEEDTEST$NC  ${z}  │$NC [${green}21${NC}] CERT SSL    $NC${z}│$NC"   
echo -e " ${z}│$NC [${green}04${NC}] TROJAN MENU$NC  ${z}│$NC [${green}13${NC}] RUNNING$NC   ${z}   │$NC [${green}22${NC}] INS. UDP    $NC${z}│$NC" 
echo -e " ${z}│$NC [${green}05${NC}] SHADOW MENU$NC  ${z}│$NC [${green}14${NC}] CLEAR LOG$NC   ${z} │$NC [${green}23${NC}] CLEAR CACHE $NC${z}│$NC"
echo -e " ${z}│$NC [${green}06${NC}] TRIAL MENU$NC   ${z}│$NC [${green}15${NC}] CREATE SLOW$NC  ${z}│$NC [${green}24${NC}] BOT PANEL   $NC${z}│$NC"
echo -e " ${z}│$NC [${green}07${NC}] VPS INFO$NC     ${z}│$NC [${green}16${NC}] UPDATE SCRIPT$NC${z}│$NC [${green}25${NC}] GANTI BANNER$NC${z}│$NC"
echo -e " ${z}│$NC [${green}08${NC}] BOT NOTIF$NC    ${z}│$NC [${green}17${NC}] BCKP/RSTR$NC${z}    │$NC [${green}26${NC}] RESTART BNR$NC${z} │$NC"
echo -e " ${z}│$NC [${green}09${NC}] DELL ALL EXP$NC ${z}│$NC [${green}18${NC}] REBOOT$NC${z}       │$NC [${green}27${NC}] BACK MENU  $NC${z} │$NC"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e "${z} │$NC HARI INI${NC}: ${r}$ttoday   $NC KEMARIN${NC}: ${r}$tyest    $NC BULAN${NC}: ${r}$tmon$NC $NC"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${Blue}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e "${GREEN} ༺ ${BLUE}𒆜${RED}▁ ${CYAN}▂ ${GREEN}▄ ${ORANGE}▅${PINK} ▆${GREEN} ▇ ${RED}█${BLUE}𒆜${CYAN} ༻${NC}  SCRIPT ARYA BLITAR ${BLUE}༺ ${RED}𒆜${GREEN}█ ${ORANGE}▇ ${CYAN}▆ ${RED}▅ ${GREEN}▄ ${ORANGE}▂ ${PINK}▁${BLUE}𒆜 ${CYAN}༻                   \E[0m"
echo -e " ${Blue}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " "
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│  $NC Username ${NC}      $Blue=$NC $username $NC"
echo -e " ${z}│  $NC Version    ${NC}    $Blue=$NC Janda ${y}2100 $NC"
echo -e " ${z}│  $NC Status Sc     ${NC} $Blue=$NC $sts $exp ${NC}"
echo -e " ${z}│  $NC Exp Script ${NC}    $Blue=$NC ($green $certifacate ${y}Days $NC) $NC"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo
read -p " Select menu : " opt
echo -e ""
case $opt in
1 | 01)
clear
m-sshws
;;
2 | 02)
clear
m-vmess
;;
3 | 03)
clear
m-vless
;;
4 | 04)
clear
m-trojan
;;
5 | 05)
clear
m-ssws
;;
6 | 06)
clear
m-trial
;;
7 | 07)
clear
gotop
echo ""
echo -e " ${GREEN} Back to menu in 1 sec ${NC}"
sleep 1
menu
;;
8 | 08)
clear
bot
echo ""
echo -e " ${GREEN} Back to menu in 1 sec ${NC}"
sleep 1
menu
;;
9 | 09)
clear
xp
;;
10)
clear
autoreboot
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
menu
;;
11)
clear
prot
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
menu
;;
12)
clear
speedtest
;;
13)
clear
run
;;
14)
clear
clearlog
;;
15)
clear
sd
;;
23)
clear
clearcache
;;
17)
clear
menu-backup
;;
18)
clear
reboot
;;
19)
clear
restart
;;
22)
clear
echo -e "${green}ANDA YAKIN UNTUK MEMASANG SCRIPT INI ? $NC"
echo -e "${green}MINIMAL RAM 2 GB BIAR DISK TIDAK FULL $NC"
echo -e "${green}OS SUPPORT UBUNTU 20.04 ONLY $NC"
echo -e ""
read -p "SUDAH LAPOR KE ADMIN ? [Y/N]:" arg
if [[ $arg == 'Y' ]]; then
  echo -e "${Blue}Tindakan Diteruskan! $NC"
  echo -e "${green}START. . . $NC"
elif [[ $arg == 'y' ]]; then
  echo -e "${Blue}Tindakan Diteruskan! $NC"
  clear
  echo -e "${Blue}START . . .$NC"
elif [[ $arg == 'N' ]]; then
  echo -e "${RED}Tindakan Dihentikan! $NC"
  sleep 1
  clear
  menu
  exit 0
elif [[ $arg == 'n' ]]; then
  echo -e "${RED}Tindakan Dihentikan! $NC"
  sleep 1
  clear
  rm -f /root/update.sh
  exit 0
else
  echo -e "${RED}Argumen Tidak Diketahui! $NC"
  sleep 1
  clear
  rm -f /root/update.sh
  exit 0
fi
##########
clear
wget https://raw.githubusercontent.com/Jatimpark/haproxy2/main/ssh/install-udp && chmod +x install-udp && ./install-udp
;;
20)
clear
addhost
;;
21)
clear
fixcert
;;
16)
clear
wget https://raw.githubusercontent.com/Jatimpark/haproxy2/main/ssh/update.sh && chmod +x update.sh && ./update.sh
;;
24)
clear
add-bot-panel
;;
25)
clear
nano /etc/arya.txt
;;
26)
clear
/etc/init.d/dropbear restart
;;
27)
clear
exit
;;
0 | 00)
exit
;;
x)
menu
;;
*)
echo -e ""
menu
;;
esac
