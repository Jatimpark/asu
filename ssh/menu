#!/bin/bash
# COLOR VALIDATION
clear
y='\033[0;33m' #yellow
BGX="\033[0;42m"
CYAN="\033[0;96m"
z="\033[0;96m"
w="\033[0;36m"
Blue="\033[0;36m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[0;30m"
Blue="\033[0;36m"
green='\033[0;32m'
grenbo="\e[92;0m"
purple="\033[0;95m"
g="\033[0;32m"
wet="\033[0;97m"
YELL='\033[0;33m'
r="\033[0;33m"
#Download/Upload today
dtoday="$(vnstat -i eth0 | grep "today" | awk '{print $2" "substr ($3, 1, 1)}')"
utoday="$(vnstat -i eth0 | grep "today" | awk '{print $5" "substr ($6, 1, 1)}')"
ttoday="$(vnstat -i eth0 | grep "today" | awk '{print $8" "substr ($9, 1, 1)}')"
#Download/Upload yesterday
dyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $2" "substr ($3, 1, 1)}')"
uyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $5" "substr ($6, 1, 1)}')"
tyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $8" "substr ($9, 1, 1)}')"
#Download/Upload current month
dmon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $3" "substr ($4, 1, 1)}')"
umon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $6" "substr ($7, 1, 1)}')"
tmon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $9" "substr ($10, 1, 1)}')"
clear
#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
ISP=$(curl -s ipinfo.io/org | cut -d " " -f 2-10 )
CITY=$(curl -s ipinfo.io/city )
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
#########################
# USERNAME
rm -f /usr/bin/user
username=$(curl https://raw.githubusercontent.com/Jatimpark/permission/main/ip | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl https://raw.githubusercontent.com/Jatimpark/permission/main/ip | grep $MYIP | awk '{print $3}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status ExpiRED Active | Geo Project
Info="(${green}Active${NC})"
Error="(${RED}ExpiRED${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl https://raw.githubusercontent.com/Jatimpark/permission/main/ip | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
echo -e "\e[32mloading...\e[0m"
clear

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"

# Getting CPU Information | Geo Project
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
ISP=$(curl -s ipinfo.io/org | cut -d " " -f 2-10 )
CITY=$(curl -s ipinfo.io/city )
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#St Running
clear
# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${green}ON${NC}"
else
   status_ssh="${RED}OFF${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}ON${NC}"
else
    status_ws_epro="${RED}OFF${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${green}ON${NC}"
else
   status_haproxy="${RED}OFF${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then 
   status_xray="${green}ON${NC}"
else
   status_xray="${RED}OFF${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then 
   status_nginx="${green}ON${NC}"
else
   status_nginx="${RED}OFF${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="${green}ON${NC}"
else
   status_dropbear="${RED}OFF${NC} "
fi
#####INFOAKUN
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=$ssx/2
###########
KANAN="\033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m$NC"
KIRI="\033[1;32m>\033[1;33m>\033[1;31m>\033[1;31m$NC"
########
r="\033[1;31m"  #REDTERANG
a=" ${r}MEMBER" 
k=${r}━━━━"
o=${g}━━━━"
n=${w}━━━━"
t=${purple}━━━━"
o=${y}━━━━"
l=${wet}━━━━"
clear
echo -e "   ${y}  ────────────────────────────────────── ${NC}"
echo -e "   ${y}    .::::.${NC} \E[42;1;37m      ASU VPN      ${NC}${y} .::::. ${NC}"
echo -e "   ${y}  ────────────────────────────────────── ${NC}"
echo -e "   ${y}┌━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┐${NC}"
echo -e "   ${y}│$NC$w ⇲ $NC$r System OS ${NC}     $w=$NC $MODEL${NC}"
echo -e "   ${y}│$NC$w ⇲ $NC$r Server RAM ${NC}    $w=$NC $RAM MB $NC"
echo -e "   ${y}│$NC$w ⇲ $NC$r Core System ${NC}   $w=$NC $CORE${NC}"
echo -e "   ${y}│$NC$w ⇲ $NC$r Cpu Vps ${NC}       $w=$NC $LOADCPU ${NC}"
echo -e "   ${y}│$NC$w ⇲ $NC$r Uptime Server ${NC} $w=$NC $SERONLINE${NC}"
echo -e "   ${y}│$NC$w ⇲ $NC$r Date ${NC}          $w=$NC $DATEVPS${NC}"
echo -e "   ${y}│$NC$w ⇲ $NC$r Time ${NC}          $w=$NC $TIMEZONE${NC}"
echo -e "   ${y}│$NC$w ⇲ $NC$r IP VPS ${NC}        $w=$NC $IPVPS${NC}"
#echo -e "   ${y}│$NC$w ⇲ $NC$r ISP VPS ${NC}       $w=$NC $ISP${NC}"
#echo -e "   ${y}│$NC$w ⇲ $NC$r City ${NC}          $w=$NC $CITY${NC}"
echo -e "   ${y}│$NC$w ⇲ $NC$r Domain ${NC}        $w=$NC $domain${NC}"
echo -e "   ${y}└━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┘${NC}"
echo -e ""
echo -e "    ${y}   ┌────────────────────────────────┐${NC}"
echo -e "    ${y}   │  ${w}USER          : $NC ${NC}$username"
echo -e "    ${y}   │  ${w}Script Status : $NC $sts"
echo -e "    ${y}   │  ${w}Exp Script    : $g $certifacate ${NC}Days"
echo -e "    ${y}   └────────────────────────────────┘${NC}"
echo -e "             ${g}SSH OVPN : ${NC}$ssh1${NC}  ${g}VMESS : ${NC}$vma${NC}"
echo -e "          ${g}VLESS : ${NC}$vla${NC} ${g}TROJAN : ${NC}$trb${NC} ${g}SHADWSK : ${NC}$ssa${NC}"
echo -e "    ${y} ┌──────────────────────────────────────┐${NC}"
echo -e "    ${y} │ ${g} 1.${NC}${w}SSH OVPN MANAGER$NC ${g} 4.${NC}${w}TROJAN MANAGER${NC}"
echo -e "    ${y} │ ${g} 2.${NC}${w}VMESS MANAGER$NC    ${g} 5.${NC}${w}SHDWSK MANAGER${NC}"
echo -e "    ${y} │ ${g} 3.${NC}${w}VLESS MANAGER$NC    ${g} 6.${NC}${w}OTHER SETTINGS${NC}"
echo -e "    ${y} └──────────────────────────────────────┘${NC}"
echo -e "     $NC HARI INI${NC}: ${r}$ttoday $NC KEMARIN${NC}: ${r}$tyest $NC BULAN${NC}: ${r}$tmon$NC $NC"
echo -e "    ${y} ┌──────────────────────────────────────────────┐${NC}"
echo -e "     ${y}│${NC}${Blue} SSH$NC : $status_ssh" "    ${Blue} NGINX$NC : $status_nginx" "   ${Blue} XRAY$NC : $status_xray      $NC${z}$NC" 
echo -e "     ${y}│${NC}${Blue} WS-ePRO$NC : $status_ws_epro" "${Blue} DROPBEAR$NC : $status_dropbear" "${Blue} HAPROXY$NC : $status_haproxy   $NC${z}$NC" 
echo -e "     ${y}└──────────────────────────────────────────────┘${NC}"
echo ""
echo -e "    ${g}           Version Script 2025${NC}"
echo -e "             ${r}━━━━$NC${g}━━━━$NC${w}━━━━$NC${purple}━━━━$NC${y}━━━━$NC${wet}━━━━$NC"
echo
read -p "       Select From Options [ 1 - 6 ] : " opt
echo -e ""
case $opt in
1 | 01)
clear
m-sshws
;;
2 | 02)
clear
m-vmess
;;
3 | 03)
clear
m-vless
;;
4 | 04)
clear
m-trojan
;;
5 | 05)
clear
m-ssws
;;
6 | 06)
clear
utility
;;
0 | 00)
figlet cok
exit
;;
x)
menu
;;
*)
echo -e ""
menu
;;
esac
